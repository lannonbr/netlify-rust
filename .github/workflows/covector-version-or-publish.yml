name: version or publish

on:
  push:
    branches:
      - master

jobs:
  version-or-release:
    runs-on: ubuntu-latest
    outputs:
      willPublish: ${{ steps.covector.outputs.willPublish-netlify-deploy }}
      version: ${{ steps.covector.outputs.version-netlify-deploy }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.id }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # required for use of git history
      - name: covector status
        uses: jbolda/covector/packages/action@covector-v0
        id: covector
        with:
          command: "status"
      - name: git config
        if: ${{ steps.covector.outputs.status != 'No changes.' }}
        run: |
          git config --global user.name "${{ github.event.pusher.name }}"
          git config --global user.email "${{ github.event.pusher.email }}"
      - name: covector version
        uses: jbolda/covector/packages/action@covector-v0
        if: ${{ steps.covector.outputs.status != 'No changes.' }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          command: "version"
          createRelease: true
      - name: Create Pull Request With Versions Bumped
        id: cpr
        uses: peter-evans/create-pull-request@v3
        if: ${{ steps.covector.outputs.status != 'No changes.' }}
        with:
          title: "Publish New Versions"
          commit-message: "publish new versions"
          labels: "version updates"
          branch: "release"
          body: ${{ steps.covector.outputs.change }}
      - name: create release
        if: steps.covector.outputs.willPublish-netlify-deploy
        id: create_release
        uses: softprops/action-gh-release@9729932bfb75c05ad1f6e3a729294e05abaa7001
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.covector.outputs.version-netlify-deploy }}
          name: v${{ steps.covector.outputs.version-netlify-deploy }}
          body: ""
          draft: true

  build-binaries:
    needs: [version-or-release]
    if: needs.version-or-release.outputs.willPublish
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            target: netlify_deploy
          - os: macos-latest
            platform: macos
            target: netlify_deploy
          - os: windows-latest
            platform: windows
            target: netlify_deploy.exe
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: tar the binary for upload
        run: |
          if [[ "${{matrix.platform}}" == "macos" ]]; then
              brew install gnu-tar
              gtar -C target -cvzf netlify-deploy-${{matrix.platform}}-${{ needs.version-or-release.outputs.version }}.tar.gz release/${{matrix.target}}
          else
              tar -C target -cvzf netlify-deploy-${{matrix.platform}}-${{ needs.version-or-release.outputs.version }}.tar.gz release/${{matrix.target}}
          fi
        shell: bash
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.version-or-release.outputs.upload_url }}
          asset_path: netlify-deploy-${{matrix.platform}}-${{ needs.version-or-release.outputs.version }}.tar.gz
          asset_name: netlify-deploy-${{matrix.platform}}-${{ needs.version-or-release.outputs.version }}.tar.gz
          asset_content_type: application/octet-stream

  publish:
    needs: [build-binaries]
    runs-on: ubuntu-latest
    timeout-minutes: 65

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # required for use of git history
      - name: git config
        run: |
          git config --global user.name "${{ github.event.pusher.name }}"
          git config --global user.email "${{ github.event.pusher.email }}"
      - name: covector publish
        uses: jbolda/covector/packages/action@covector-v0
        id: covector
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          command: "publish"
          createRelease: true
